<?php
/**
 * @file
 * Gallery tiler main code.
 */

/**
 * Implements hook_field_formatter_info().
 */
function gallery_tiler_field_formatter_info() {
  $formats = array(
    'tiled_gallery' => array(
      'label' => t('Tiled gallery'),
      'field types' => array(
        'image',
      ),
      'settings' => array(
        'type' => 'compact',
        'image_style' => NULL,
        'breakpoint' => 960,
        'tile_height' => 220,
        'gutter' => 0,
      ),
    ),
  );
  return $formats;
}

/**
 * Implements hook_field_formatter_settings_form().
 */
function gallery_tiler_field_formatter_settings_form($field, $instance, $view_mode, $form, &$form_state) {
  $display = $instance['display'][$view_mode];
  $settings = $display['settings'];
  $element = array();

  // @todo more options.
  $element['type'] = array(
    '#type' => 'select',
    '#title' => t('Gallery type'),
    '#options' => array('compact' => 'Compact'),
    '#default_value' => $settings['type'],
    '#required' => TRUE,
  );
  $image_styles = image_style_options(FALSE, PASS_THROUGH);
  $element['image_style'] = array(
    '#type' => 'select',
    '#title' => t('Image style'),
    '#default_value' => $settings['image_style'],
    '#empty_option' => t('None (original image)'),
    '#options' => $image_styles,
  );
  // @todo colorbox?

  $element['breakpoint'] = array(
    '#type' => 'number',
    '#title' => t('Breakpoint'),
    '#min' => 450,
    '#max' => 1500,
    '#default_value' => $settings['breakpoint'],
    '#field_suffix' => 'px',
  );
  $element['tile_height'] = array(
    '#type' => 'number',
    '#title' => t('Tile height'),// @todo wording.
    '#min' => 90,
    '#max' => 300,
    '#default_value' => $settings['tile_height'],
    '#field_suffix' => 'px',
  );
  $element['gutter'] = array(
    '#type' => 'number',
    '#title' => t('Gutter (gap between tiles)'),
    '#min' => 0,
    '#max' => 25,
    '#default_value' => $settings['gutter'],
    '#field_suffix' => 'px',
  );
  return $element;
}

/**
 * Implements hook_field_formatter_settings_summary().
 */
function gallery_tiler_field_formatter_settings_summary($field, $instance, $view_mode) {
  $summary = 'This should display the summary';
  return $summary;
}

/**
 * Implements hook_field_formatter_view().
 */
function gallery_tiler_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();
  if ($display['type'] == 'tiled_gallery') {
    // @todo consider css file per type?
    $path = backdrop_get_path('module', 'gallery_tiler') . '/css';
    $breakpoint = $display['settings']['breakpoint'];
    $element['#attached']['css'] = array(
      $path . '/gallery-tiler.css',
      $path . '/gallery-tiler-media.css' => array(
        'media' => "(min-width: {$breakpoint}px)",
      ),
    );
    foreach ($items as $delta => $item) {
      // @todo colorbox?
      $element[$delta] = array(
        '#theme' => 'image_formatter',
        '#item' => $item,
        '#image_style' => $display['settings']['image_style'],
      );
    }
  }
  return $element;
}

/**
 * Implements hook_preprocess_field().
 */
function gallery_tiler_preprocess_field(&$variables) {
  if ($variables['element']['#formatter'] == 'tiled_gallery') {
    // Custom template file.
    $variables['theme_hook_suggestions'] = array('gallery_tiler_field');

    $element = $variables['element'];
    $entity_type = !empty($element['#entity_type']) ? $element['#entity_type'] : '';
    $field_name = !empty($element['#field_name']) ? $element['#field_name'] : '';
    $bundle = !empty($element['#bundle']) ? $element['#bundle'] : '';
    $view_mode = !empty($element['#view_mode']) ? $element['#view_mode'] : '';

    $formatter_info = field_formatter_settings_get_instance_display_settings($entity_type, $field_name, $bundle, $view_mode);
    $variables['classes'][] = 'gallery-tiler';
    $variables['classes'][] = 'gallery-tiler-' . $formatter_info['type'];
    // Set CSS variables. @todo make this easer to read.
    $variables['content_attributes']['style'] = '--height: ' . $formatter_info['tile_height'] . 'px; --gap: ' . $formatter_info['gutter'] . 'px;';
  }
}

/**
 * Implements hook_theme().
 */
function gallery_tiler_theme($existing, $type, $theme, $path) {
  $theme = array();
  $theme['gallery_tiler_field'] = array(
    'template' => 'field-gallery-tiler',
    'path' => drupal_get_path('module', 'gallery_tiler') . '/templates',
  );
  return $theme;
}
